// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0 OR MIT

use crate::cdk_stack_synth::install::fixtures::writer::{CdkAppCodeWriter, INDENT};
use cdk_from_cfn::code::{CodeBuffer, IndentOptions};

pub struct Python {}

pub const WRITER: fn() -> Box<dyn CdkAppCodeWriter> = || Box::new(Python {});

impl CdkAppCodeWriter for Python {
    fn app_file(
        &self,
        code: &CodeBuffer,
        cdk_stack_classname: &str,
        stack_name: &str,
        include_env: bool,
    ) {
        code.line("# autogenerated");
        code.line("import aws_cdk as cdk");
        if include_env {
            code.line("import os");
        }
        code.line(format!(
            "from {cdk_stack_classname} import {cdk_stack_classname}"
        ));
        let app = code.indent_with_options(IndentOptions {
            indent: INDENT,
            leading: Some("app = cdk.App(".into()),
            trailing: None,
            trailing_newline: true,
        });
        let app_props = app.indent_with_options(IndentOptions {
            indent: INDENT,
            leading: Some("default_stack_synthesizer=cdk.DefaultStackSynthesizer(".into()),
            trailing: None,
            trailing_newline: false,
        });
        app_props.line("generate_bootstrap_version_rule=False");
        app_props.line(")");
        app.line(")");
        code.line("");
        if include_env {
            code.line(format!("{cdk_stack_classname}(app, '{stack_name}', env=cdk.Environment(region=os.environ.get('CDK_DEFAULT_REGION') or os.environ.get('AWS_DEFAULT_REGION')))"));
        } else {
            code.line(format!("{cdk_stack_classname}(app, '{stack_name}')"));
        }
        code.line("app.synth()");
    }
}
